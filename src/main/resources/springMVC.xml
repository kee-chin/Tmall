<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- springMVC -->

    <!--启动注解识别-->
    <context:annotation-config />

    <!-- 扫描Controller,并将其生命周期纳入Spring管理 -->
    <context:component-scan base-package="com.chinkee.tmall.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--注解驱动，以使得访问路径与方法的匹配可以通过注解配置-->
    <mvc:annotation-driven />

    <!--开通静态资源的访问 否则访问图片、css、js等文件可能出错-->
    <mvc:default-servlet-handler />

    <!-- WEB-INF目录是被保护起来的，其下的jsp页面不能直接运行，只能通过控制器跳转来访问；-->
    <!-- 静态资源（js、css、img）也不能被WEB-INF目录外的其他文件直接引用 -->
    <!-- 想要引入WEB-INF下的静态资源，则得通过springmvc的配置文件进行设置 -->
    <!-- 视图定位 定位到WEB-INF/jsp/*.jsp中 --> <!-- springMVC中的V -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 对上传文件的解析 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>

    <!-- 拦截器，拦截未登录状态不可访问的页面 -->
    <mvc:interceptors>
        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.chinkee.tmall.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，
        然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
        
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.chinkee.tmall.interceptor.OtherInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>